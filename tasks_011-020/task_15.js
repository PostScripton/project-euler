/*
Начиная в левом верхнем углу сетки 2×2 и имея возможность двигаться только вниз или вправо, существует ровно 6 маршрутов до правого нижнего угла сетки.

Сколько существует таких маршрутов в сетке 20×20?
*/

const size = 20
let grid = new Array(size + 1)

// Создаём сетку
for (let i = 0; i < grid.length; i++) grid[i] = new Array(size + 1)

// Самым крайним элементам выставляем по 1, ибо с краёв только один путь
for (let i = 0; i < grid.length; i++) {
	for (let j = 0; j < grid.length; j++) {
		grid[i][size] = 1
		grid[size][i] = 1
	}
}

/*
(●) → (1)
 ↓     ↓
(1) →  X

X - конец
Чтобы найти кол-во путей в ● точке, нужно сложить кол-во путей справа и снизу
*/

for (let i = size - 1; i >= 0; i--) {
	for (let j = size - 1; j >= 0; j--) {
		grid[i][j] = grid[i + 1][j] + grid[i][j + 1]
	}
}

console.log('Result:', grid[0][0]) // OUTPUT: 137846528820

